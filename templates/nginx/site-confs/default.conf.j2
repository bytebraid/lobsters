

map $http_origin $allow_origin {
        ~^https?://(.*\.)?({{ server_name }})(:\d+)?$ $http_origin;
        default "*";
    }

server {
    listen              443 ssl http2;
 
    server_name {{ server_name }};

    # ############################################## #
    # Swag config manages our keys 
    # ############################################## #

    ssl_certificate       {{ ssl_certificate }};
    ssl_certificate_key   {{ ssl_certificate_key }};
    #    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /config/nginx/dhparams.pem; # managed by Certbot

    access_log /var/log/nginx/{{ server_name }}.access.log;
    error_log /var/log/nginx/{{ server_name }}.error.log;

    # TODO Update your CORS headers as needed for better security
    add_header 'Access-Control-Allow-Origin' $allow_origin always;
 #   add_header 'Access-Control-Allow-Origin' '*';
    add_header Vary Origin; 

    error_page 400 404 500 502 503 504 /error.html;

    location /error.html {
        root /var/app/build/;
        add_header 'Access-Control-Allow-Origin' $allow_origin always;    
    }

    location ~ ^/stream/.*hls.* {
        root /var/tmp;
        add_header 'Access-Control-Allow-Origin' $allow_origin always;
        add_header Vary Origin; 
    }


    location /stream {

         root /var/tmp;
         charset_types text/xml text/plain text/vnd.wap.wml application/javascript application/rss+xml application/json; 
            add_header 'Access-Control-Allow-Origin' $allow_origin always;
            add_header 'Cache-Control' 'no-cache, no-store, must-revalidate';
            add_header 'Pragma' 'no-cache';
            add_header Strict-Transport-Security "max-age=63072000";
           # CORS setup
            add_header 'Access-Control-Expose-Headers' 'Content-Length';
        types {
            application/vnd.apple.mpegurl m3u8;  
            application/json      json;
            video/mp2t ts;  
            text/html   html;
        }

        # Allow CORS preflight requests
        if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
        }
        try_files $uri $uri/ =404;

    }


    location /ws {

        add_header 'Access-Control-Allow-Origin' $allow_origin;
        add_header Vary Origin; 
        add_header 'Pragma' 'no-cache';
        add_header Cache-Control 'no-cache, no-store, must-revalidate';
 
        # Allow CORS preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
 
        # switch off logging
        access_log off;
        proxy_pass http://{{ vars.hostname }}:{{ vars.websocket_port }};
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
        # WebSocket support (nginx 1.4)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_socket_keepalive on;
    }

    # TODO Update your CORS headers as needed for better security
    # add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Origin' $allow_origin always;
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS';

    location /bisque {
        # add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Origin' $allow_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Content-Length';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Type';   
 
        # Allow CORS preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Content-Length';

            # CORS setup
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Type';   
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_hide_header Content-Security-Policy;

        # TODO set to your upstream uvicorn/gunicorn lobster/bisque/tank.py service
        proxy_pass http://{{ vars.hostname }}:{{ vars.port }};
    }

    location /kitchen {
        root /var/app/build;
        index index.html index.htm;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }


        default_type text/html;
        add_header Cache-Control "must-revalidate";
        etag on;
            # CORS setup
            # Allow CORS preflight requests
        try_files $uri $uri/ /index.html;
    }


    location / {
        root /var/app/build/; 
        index index.html index.htm;
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        default_type text/html;
        add_header Cache-Control "must-revalidate";
        etag on;
        try_files $uri $uri/ =404;        
    }
    try_files $uri $uri/ =404; 

}

